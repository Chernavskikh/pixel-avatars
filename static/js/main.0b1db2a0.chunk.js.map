{"version":3,"sources":["modules/avatars.js","modules/index.js","store.js","constants/api.js","components/savedItem.js","components/favorites.js","components/search.js","containers/home/index.js","actions/avatars.js","containers/app/index.js","index.js"],"names":["GET_AVATAR","SAVE_AVATAR","DELETE_AVATAR","initialState","avatarQuery","favoritesArr","state","action","type","payload","query","filter","item","id","createRootReducer","history","combineReducers","router","connectRouter","avatars","createBrowserHistory","middleware","thunk","routerMiddleware","composedEnhancers","compose","applyMiddleware","preloadedState","API_URL","savedItem","deleteAvatar","className","onClick","src","alt","Favorites","props","Fragment","map","index","search","saveAvatar","onChange","event","getAvatars","target","value","connect","dispatch","getAvatar","Date","now","length","App","exact","path","component","Home","store","createStore","document","querySelector","render"],"mappings":"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","file":"static/js/main.0b1db2a0.chunk.js","sourcesContent":["const GET_AVATAR = 'GET_AVATAR'\nconst SAVE_AVATAR = 'SAVE_AVATAR'\nconst DELETE_AVATAR = 'DELETE_AVATAR'\n\nconst initialState = {\n    avatarQuery: '',\n    favoritesArr: [],\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case GET_AVATAR:\n            return {\n                ...state,\n                avatarQuery: action.payload.query\n            }\n\n        case SAVE_AVATAR :\n            return {\n                ...state,\n                favoritesArr: [...state.favoritesArr, action.payload]\n            }\n\n        case DELETE_AVATAR :\n            return {\n                ...state,\n                favoritesArr: state.favoritesArr.filter(item => action.payload.id !== item.id),\n            }\n\n        default:\n            return state\n    }\n}\n\n\n\n","import { combineReducers } from 'redux'\nimport { connectRouter } from 'connected-react-router'\nimport avatars from './avatars'\n\nconst createRootReducer = (history) => combineReducers({\n  router: connectRouter(history),\n  // rest of your reducers\n  avatars,\n})\nexport default createRootReducer\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport { connectRouter, routerMiddleware } from 'connected-react-router'\nimport thunk from 'redux-thunk'\nimport { createBrowserHistory } from 'history'\nimport createRootReducer from './modules'\n\nexport const history = createBrowserHistory()\n\nconst initialState = {}\nconst enhancers = []\nconst middleware = [thunk, routerMiddleware(history)]\n\nif (process.env.NODE_ENV === 'development') {\n  const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__\n\n  if (typeof devToolsExtension === 'function') {\n    enhancers.push(devToolsExtension())\n  }\n}\n\nconst composedEnhancers = compose(\n  applyMiddleware(...middleware),\n  ...enhancers\n)\n\nexport default function configureStore(preloadedState) {\n  const store = createStore(\n    createRootReducer(history), // root reducer with router state\n    preloadedState,\n    composedEnhancers,\n  )\n\n  return store\n}\n","export const API_URL = 'https://avatars.dicebear.com/api'\n","import React from 'react'\nimport { API_URL } from '../constants/api'\n\nconst savedItem = ({ item, deleteAvatar }) => {\n    return (\n        <div className=\"favorite-item\">\n            <button className=\"btn-delete\" onClick={() => deleteAvatar(item.id)}>X</button>\n            <img src={`${API_URL}/${item.type}/${item.query}.svg`} alt=\"avatar\"/>\n        </div>\n    )\n}\n\nexport default savedItem\n","import React from 'react'\nimport SavedItem from './savedItem'\n\nconst Favorites = (props) => {\n    return (\n        <React.Fragment>\n            <h2>Favorites:</h2>\n            <div className=\"favorites-container\">\n                { props.avatars.map(function (item, index) {\n                    return (\n                        <SavedItem deleteAvatar={props.deleteAvatar} key={item.id} item={item}/>\n                    )\n                })\n                }\n            </div>\n        </React.Fragment>\n    )\n}\n\nexport default Favorites","import React from 'react'\nimport { API_URL } from '../constants/api'\n\nconst search = props => {\n    return (\n        <React.Fragment>\n            <h1>Enter your own seed!</h1>\n            <small>(Don't use sensitive or personal data as seed!)</small>\n            <div className=\"avatar-container\">\n                <div className=\"item\">\n                    <img src={`${API_URL}/male/${props.query}.svg`} alt=\"\"/>\n                    <button className=\"btn\" onClick={() => props.saveAvatar(props.query, 'male')} type=\"button\">Add to favorites</button>\n                </div>\n\n                <div className=\"item\">\n                    <img src={`${API_URL}/female/${props.query}.svg`} alt=\"\"/>\n                    <button className=\"btn\" type=\"button\" onClick={() => props.saveAvatar(props.query, 'female')}>Add to favorites</button>\n                </div>\n\n                 <div className=\"item\">\n                    <img src={`${API_URL}/identicon/${props.query}.svg`} alt=\"\"/>\n                    <button className=\"btn\" type=\"button\" onClick={() => props.saveAvatar(props.query, 'identicon')}>Add to favorites</button>\n                </div>\n            </div>\n\n            <input type=\"text\" onChange={(event) => props.getAvatars(event.target.value)} />\n        </React.Fragment>\n    )\n}\n\nexport default search\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { getAvatar, saveAvatar, deleteAvatar } from '../../actions/avatars'\nimport Favorites from '../../components/favorites'\nimport Search from '../../components/search'\n\nconst Home = props => (\n        <div className=\"wrapper\">\n            <Search query={props.query} saveAvatar={props.saveAvatar} getAvatars={props.getAvatars} />\n            { props.favoritesArr.length > 0 && <Favorites avatars={props.favoritesArr} deleteAvatar={props.deleteAvatar} />}\n        </div>\n)\n\nconst mapStateToProps = state => {\n    return {\n        query: state.avatars.avatarQuery,\n        favoritesArr: state.avatars.favoritesArr,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getAvatars: query => {\n            dispatch(getAvatar(query));\n        },\n\n        saveAvatar: (query, type) => {\n            dispatch(saveAvatar(query, type));\n        },\n\n        deleteAvatar: (id) => {\n            dispatch(deleteAvatar(id));\n        }\n    };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Home)\n","// action types constants\nexport const GET_AVATAR = 'GET_AVATAR'\nexport const SAVE_AVATAR = 'SAVE_AVATAR'\nexport const DELETE_AVATAR = 'DELETE_AVATAR'\n\nexport const getAvatar = (query) => {\n    return {\n        type: GET_AVATAR,\n        payload: {\n            query: query\n        }\n    }\n}\n\nexport const saveAvatar = (query, type) => {\n    return {\n        type: SAVE_AVATAR,\n        payload: {\n            query,\n            type,\n            // generate unique id\n            id: Date.now(),\n        }\n    }\n}\n\nexport const deleteAvatar = (id) => {\n    return {\n        type: DELETE_AVATAR,\n        payload: {\n            id,\n        }\n    }\n}\n","import React from 'react'\nimport { Route } from 'react-router-dom'\nimport Home from '../home'\n\nconst App = () => (\n  <div>\n    <main>\n      <Route exact path=\"/\" component={Home} />\n    </main>\n  </div>\n)\n\nexport default App\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { ConnectedRouter } from 'connected-react-router'\nimport configureStore, { history } from './store'\nimport App from './containers/app'\n\nimport 'sanitize.css/sanitize.css'\nimport './index.css'\n\nconst store = configureStore(/* provide initial state if any */)\nconst target = document.querySelector('#root')\n\nrender(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <div>\n        <App />\n      </div>\n    </ConnectedRouter>\n  </Provider>,\n  target\n)\n"],"sourceRoot":""}